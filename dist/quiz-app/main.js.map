{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/question-form/question-form.component.ts","./src/app/question-form/question-form.component.html","./src/app/questions.service.ts","./src/app/questions/questions.component.ts","./src/app/questions/questions.component.html","./src/app/quiz.model.ts","./src/app/results/results.component.ts","./src/app/results/results.component.html","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","// src/app/app.component.ts\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '<router-outlet></router-outlet>'\n})\n\nexport class AppComponent {}","import { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { QuestionFormComponent } from './question-form/question-form.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ResultsComponent } from './results/results.component';\nimport { QuestionsComponent } from './questions/questions.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\n\nconst appRoutes: Routes = [\n  { path: 'welcome', component: WelcomeComponent },\n  { path: ':quizId', component: QuestionsComponent },\n  { path: '', redirectTo: \"welcome\", pathMatch: \"prefix\" },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuestionFormComponent,\n    ResultsComponent,\n    QuestionsComponent,\n    WelcomeComponent\n  ],\n  imports: [\n    BrowserModule, HttpClientModule,ReactiveFormsModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Question } from '../quiz.model';\n\n@Component({\n  selector: 'app-question-form',\n  templateUrl: './question-form.component.html',\n  styleUrls: ['./question-form.component.scss']\n})\nexport class QuestionFormComponent implements OnInit {\n\n  @Input() question: Question;\n  @Output() onChoiceMade = new EventEmitter<string>();\n\n  private form: FormGroup;\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      choice: new FormControl()\n    });\n\n    this.form.valueChanges.subscribe(this.onChange);\n  }\n\n  onChange = () => {\n    this.onChoiceMade.emit(this.form.value.choice);\n  }\n\n}","\n\n\n<div class=\"quiz container\" *ngIf=\"question\">\n    <div class=\"row\">\n      <h1>{{question.label}}</h1>\n    </div>\n    \n    <div class=\"row\">\n      <form [formGroup]=\"form\" class=\"col-12\">\n        <div class=\"form-group row\">\n          \n          <label *ngFor=\"let choice of question.choices\" class=\"col-12\">\n            <input type=\"radio\" [value]=\"choice\" formControlName=\"choice\">\n            <span> &nbsp;&nbsp; {{choice.value}}</span>\n          </label>\n        </div>\n      </form>\n    </div>\n    \n  </div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Quiz, Question } from './quiz.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionsService {\n\n  constructor(private http: HttpClient) {\n\n   }\n\n\n   public getQuizzes() {\n    return this.http.get(`./assets/quiz-list.json`).pipe(\n      map((result: any[]) => {\n        return result.map(r => new Quiz(r.label, r.name, r.description, r.fileName));\n      })\n    );\n  }\n\n  public getQuestions(fileName: string) {\n    return this.http.get(`./assets/${fileName}.json`).pipe(\n      map((result: any[]) => {\n        return result.map(r => new Question(r.label, r.choices));\n      })\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { switchMap } from 'rxjs/operators';\n\nimport { QuestionsService } from '../questions.service';\nimport { Quiz, Answers, Choice, Question } from '../quiz.model';\nimport { UpperCasePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-questions',\n  templateUrl: './questions.component.html',\n  styleUrls: ['./questions.component.scss']\n})\nexport class QuestionsComponent implements OnInit {\n\n  quiz: Quiz;\n  answers: Answers;\n  questions: Question[];\n  currentQuestionIndex: number;\n  quizname:string;\n\n  private showResults = false;\n\n  // inject both the active route and the questions service\n  constructor(private route: ActivatedRoute, private questionsService: QuestionsService) {}\n\n  ngOnInit() {\n\n    // read from the dynamic route and load the proper quiz data\n    this.questionsService.getQuestions(this.route.snapshot.params.quizId)\n      .subscribe(questions => {\n        // initialize everything\n        this.questions = questions;\n        this.answers = new Answers();\n        this.currentQuestionIndex = 0;\n        this.quizname=this.route.snapshot.params.quizId;\n          if(this.quizname=='math'){this.quizname='mathematics';}\n      });\n  }\n\n  updateChoice(choice: Choice) {\n    this.answers.values[this.currentQuestionIndex] = choice;\n  }\n\n  nextOrViewResults() {\n    if (this.currentQuestionIndex === this.questions.length - 1) {\n      this.showResults = true;\n      return;\n    }\n\n    this.currentQuestionIndex++;\n  }\n\n  reset() {\n    this.quiz = undefined;\n    this.questions = undefined;\n    this.answers = undefined;\n    this.currentQuestionIndex = undefined;\n  }\n\n  \n\n}","<div *ngIf=\"quiz && !questions\" class=\"spinner-grow text-primary\"></div>\n\n<div class=\"quiz\" *ngIf=\"questions\">\n\n  <div class=\"container\">\n    <div class=\"row header\" > {{quizname|uppercase}} QUIZ </div>\n  </div>\n  <div class=\"questions\" *ngIf=\"!showResults\">\n    <app-question-form\n      [question]=\"questions[currentQuestionIndex]\"\n      (onChoiceMade)=\"updateChoice($event)\">\n    </app-question-form>\n\n    <div class=\"container\">\n      <div class=\"row\">\n        <button\n        class=\"btn btn-success\"\n        (click)=\"nextOrViewResults()\"\n        [disabled]=\"!answers.values[currentQuestionIndex]\"\n        >\n          {{currentQuestionIndex === questions.length - 1 ? 'View results' : 'Next'}}\n        </button>\n      </div>\n    \n    </div>\n\n  </div>\n\n  <app-results *ngIf=\"showResults\" [answers]=\"answers\"></app-results>\n</div>","export class Choice {\n    constructor(public value: string, public correct?: boolean) {}\n  }\n  \n  export class Question {\n    constructor(public label: string, public choices: Choice[]) {}\n  }\n  \n  export class Quiz {\n    constructor(public label: string, public name: string, public description: string, public fileName: string) {}\n  }\n  \n  export class Answers {\n    constructor(public values: Choice[] = []) {}\n  }","import { Question } from './../quiz.model';\nimport { Component, OnInit,Input } from '@angular/core';\nimport { Answers } from '../quiz.model';\n\n@Component({\n  selector: 'app-results',\n  templateUrl: './results.component.html',\n  styleUrls: ['./results.component.scss']\n})\nexport class ResultsComponent implements OnInit {\n  \n  constructor() {}\n\n  ngOnInit(): void {\n\n    \n\n  }\n\n  @Input() answers: Answers;\n  \n\n}\n","<div class=\"results container\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <h2>Results</h2>\n      </div>\n    </div>\n    \n    \n      <div class=\"row\" *ngFor=\"let a of answers.values\" [ngClass]=\"{correct: a.correct}\">\n        <div class=\"col-3 answer \">{{a.value}}</div><div class=\"col-1 tick\"><i class=\"fas fa-check-circle\"></i></div>\n      </div>\n\n      \n      \n\n    \n    \n\n    <div class=\"row\">\n      <a routerLink=\"/welcome\"> <button>Choose another quiz</button></a>\n    </div>\n    \n  </div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-12 header\"><h1>Welcome</h1></div>\n        </div>\n    \n        <div class=\"row\">\n            \n            <div class=\"col-12\"><h2>Choose your quiz</h2></div>\n        </div>\n    \n        <div class=\"row\">\n            <div  class=\"col-12\"> \n                <a href=\"/french\"> <button class=\"col-4\"> <p>French</p></button> </a>\n                \n            </div>\n        </div>\n    \n        <div class=\"row\">\n            <div  class=\"col-12\"> \n                \n                <a href=\"/math\"><button class=\"col-4\"><p>Mathematics</p></button></a>\n            </div>\n        </div>\n    \n    </div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}